# Generated by Django 3.2 on 2023-01-13 09:33

from django.db import migrations, models
import meterbus.core_objects


class Migration(migrations.Migration):

    dependencies = [
        ('meterbus', '0002_add_device_protocol'),
    ]

    operations = [
        migrations.AlterField(
            model_name='meterbusvariable',
            name='function',
            field=models.PositiveSmallIntegerField(choices=[(0, meterbus.core_objects.FunctionType['INSTANTANEOUS_VALUE']), (1, meterbus.core_objects.FunctionType['MAXIMUM_VALUE']), (2, meterbus.core_objects.FunctionType['MINIMUM_VALUE']), (3, meterbus.core_objects.FunctionType['ERROR_STATE_VALUE']), (4, meterbus.core_objects.FunctionType['SPECIAL_FUNCTION']), (5, meterbus.core_objects.FunctionType['SPECIAL_FUNCTION_FILL_BYTE']), (6, meterbus.core_objects.FunctionType['MORE_RECORDS_FOLLOW'])], default=0),
        ),
        migrations.AlterField(
            model_name='meterbusvariable',
            name='type',
            field=models.PositiveSmallIntegerField(choices=[(7, meterbus.core_objects.VIFUnit['ENERGY_WH']), (15, meterbus.core_objects.VIFUnit['ENERGY_J']), (23, meterbus.core_objects.VIFUnit['VOLUME']), (31, meterbus.core_objects.VIFUnit['MASS']), (35, meterbus.core_objects.VIFUnit['ON_TIME']), (39, meterbus.core_objects.VIFUnit['OPERATING_TIME']), (47, meterbus.core_objects.VIFUnit['POWER_W']), (55, meterbus.core_objects.VIFUnit['POWER_J_H']), (63, meterbus.core_objects.VIFUnit['VOLUME_FLOW']), (71, meterbus.core_objects.VIFUnit['VOLUME_FLOW_EXT']), (79, meterbus.core_objects.VIFUnit['VOLUME_FLOW_EXT_S']), (87, meterbus.core_objects.VIFUnit['MASS_FLOW']), (91, meterbus.core_objects.VIFUnit['FLOW_TEMPERATURE']), (95, meterbus.core_objects.VIFUnit['RETURN_TEMPERATURE']), (99, meterbus.core_objects.VIFUnit['TEMPERATURE_DIFFERENCE']), (103, meterbus.core_objects.VIFUnit['EXTERNAL_TEMPERATURE']), (107, meterbus.core_objects.VIFUnit['PRESSURE']), (108, meterbus.core_objects.VIFUnit['DATE']), (109, meterbus.core_objects.VIFUnit['DATE_TIME_GENERAL']), (110, meterbus.core_objects.VIFUnit['UNITS_FOR_HCA']), (111, meterbus.core_objects.VIFUnit['RES_THIRD_VIFE_TABLE']), (115, meterbus.core_objects.VIFUnit['AVG_DURATION']), (119, meterbus.core_objects.VIFUnit['ACTUALITY_DURATION']), (120, meterbus.core_objects.VIFUnit['FABRICATION_NO']), (121, meterbus.core_objects.VIFUnit['IDENTIFICATION']), (122, meterbus.core_objects.VIFUnit['ADDRESS']), (251, meterbus.core_objects.VIFUnit['FIRST_EXT_VIF_CODES']), (252, meterbus.core_objects.VIFUnit['VARIABLE_VIF']), (124, meterbus.core_objects.VIFUnit['VIF_FOLLOWING']), (253, meterbus.core_objects.VIFUnit['SECOND_EXT_VIF_CODES']), (239, meterbus.core_objects.VIFUnit['THIRD_EXT_VIF_CODES_RES']), (126, meterbus.core_objects.VIFUnit['ANY_VIF']), (127, meterbus.core_objects.VIFUnit['MANUFACTURER_SPEC']), (3, meterbus.core_objects.VIFUnitExt['CURRENCY_CREDIT']), (7, meterbus.core_objects.VIFUnitExt['CURRENCY_DEBIT']), (8, meterbus.core_objects.VIFUnitExt['ACCESS_NUMBER']), (9, meterbus.core_objects.VIFUnitExt['MEDIUM']), (10, meterbus.core_objects.VIFUnitExt['MANUFACTURER']), (11, meterbus.core_objects.VIFUnitExt['PARAMETER_SET_ID']), (12, meterbus.core_objects.VIFUnitExt['MODEL_VERSION']), (13, meterbus.core_objects.VIFUnitExt['HARDWARE_VERSION']), (14, meterbus.core_objects.VIFUnitExt['FIRMWARE_VERSION']), (15, meterbus.core_objects.VIFUnitExt['SOFTWARE_VERSION']), (16, meterbus.core_objects.VIFUnitExt['CUSTOMER_LOCATION']), (17, meterbus.core_objects.VIFUnitExt['CUSTOMER']), (18, meterbus.core_objects.VIFUnitExt['ACCESS_CODE_USER']), (19, meterbus.core_objects.VIFUnitExt['ACCESS_CODE_OPERATOR']), (20, meterbus.core_objects.VIFUnitExt['ACCESS_CODE_SYSTEM_OPERATOR']), (21, meterbus.core_objects.VIFUnitExt['ACCESS_CODE_DEVELOPER']), (22, meterbus.core_objects.VIFUnitExt['PASSWORD']), (23, meterbus.core_objects.VIFUnitExt['ERROR_FLAGS']), (24, meterbus.core_objects.VIFUnitExt['ERROR_MASKS']), (25, meterbus.core_objects.VIFUnitExt['RESERVED']), (26, meterbus.core_objects.VIFUnitExt['DIGITAL_OUTPUT']), (27, meterbus.core_objects.VIFUnitExt['DIGITAL_INPUT']), (28, meterbus.core_objects.VIFUnitExt['BAUDRATE']), (29, meterbus.core_objects.VIFUnitExt['RESPONSE_DELAY']), (30, meterbus.core_objects.VIFUnitExt['RETRY']), (31, meterbus.core_objects.VIFUnitExt['RESERVED_2']), (32, meterbus.core_objects.VIFUnitExt['FIRST_STORAGE_NR']), (33, meterbus.core_objects.VIFUnitExt['LAST_STORAGE_NR']), (34, meterbus.core_objects.VIFUnitExt['SIZE_OF_STORAGE_BLOCK']), (35, meterbus.core_objects.VIFUnitExt['RESERVED_3']), (39, meterbus.core_objects.VIFUnitExt['STORAGE_INTERVAL']), (40, meterbus.core_objects.VIFUnitExt['STORAGE_INTERVAL_MONTH']), (41, meterbus.core_objects.VIFUnitExt['STORAGE_INTERVAL_YEARS']), (47, meterbus.core_objects.VIFUnitExt['DURATION_SINCE_LAST_READOUT']), (48, meterbus.core_objects.VIFUnitExt['START_OF_TARIFF']), (55, meterbus.core_objects.VIFUnitExt['PERIOD_OF_TARIFF']), (56, meterbus.core_objects.VIFUnitExt['PERIOD_OF_TARIFF_MONTH']), (57, meterbus.core_objects.VIFUnitExt['PERIOD_OF_TARIFF_YEARS']), (58, meterbus.core_objects.VIFUnitExt['DIMENSIONLESS']), (79, meterbus.core_objects.VIFUnitExt['VOLTS']), (95, meterbus.core_objects.VIFUnitExt['AMPERE']), (96, meterbus.core_objects.VIFUnitExt['RESET_COUNTER']), (97, meterbus.core_objects.VIFUnitExt['CUMULATION_COUNTER']), (98, meterbus.core_objects.VIFUnitExt['CONTROL_SIGNAL']), (99, meterbus.core_objects.VIFUnitExt['DAY_OF_WEEK']), (100, meterbus.core_objects.VIFUnitExt['WEEK_NUMBER']), (101, meterbus.core_objects.VIFUnitExt['TIME_POINT_OF_DAY_CHANGE']), (102, meterbus.core_objects.VIFUnitExt['STATE_OF_PARAMETER_ACTIVATION']), (103, meterbus.core_objects.VIFUnitExt['SPECIAL_SUPPLIER_INFORMATION']), (107, meterbus.core_objects.VIFUnitExt['DURATION_SINCE_LAST_CUMULATION']), (111, meterbus.core_objects.VIFUnitExt['OPERATING_TIME_BATTERY']), (112, meterbus.core_objects.VIFUnitExt['DATEAND_TIME_OF_BATTERY_CHANGE']), (113, meterbus.core_objects.VIFUnitExt['RSSI']), (26, meterbus.core_objects.VIFUnitSecExt['RELATIVE_HUMIDITY'])]),
        ),
        migrations.AlterField(
            model_name='meterbusvariable',
            name='unit',
            field=models.CharField(choices=[('kWh', 'kWh'), ('Wh', 'Wh'), ('J', 'J'), ('m^3', 'm^3'), ('l', 'l'), ('kg', 'kg'), ('W', 'W'), ('J/h', 'J/h'), ('m^3/h', 'm^3/h'), ('m^3/min', 'm^3/min'), ('m^3/s', 'm^3/s'), ('kg/h', 'kg/h'), ('C', 'C'), ('K', 'K'), ('bar', 'bar'), ('date', 'date'), ('time', 'time'), ('date time', 'date time'), ('date time to second', 'date time to second'), ('seconds', 'seconds'), ('minutes', 'minutes'), ('hours', 'hours'), ('days', 'days'), ('none', 'none'), ('V', 'V'), ('A', 'A'), ('H.C.A', 'H.C.A'), ('Currency unit', 'Currency unit'), ('Baud', 'Baud'), ('Bittimes', 'Bittimes'), ('%', '%'), ('dBm', 'dBm')], max_length=50),
        ),
    ]
